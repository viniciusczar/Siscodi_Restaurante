/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.BoxLayout;
import javax.swing.JFormattedTextField;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.Timer;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author Marcelo
 */
public class pnMesaPadrao extends javax.swing.JPanel {

    /**
     * Creates new form pnMesaPadrao
     */
    public pnMesaPadrao() {
        initComponents();
        lbStatusMesa.setForeground(Color.green.darker());
        liberarMesa.setVisible(false);
    }
    private TelaMesa mesa;
    private String horaReservada;
    private static final DateFormat HORA = new SimpleDateFormat("HH:mm");
    private MaskFormatter fmtHora;
    private Timer timer;
    private ActionListener action;

    public void finalizaMesa() {
        this.setaStatus("DISPONÍVEL");
        this.lbTotalMesa.setText("0,00");
        mesa = null;
    }

    public void modificaNum(String num) {
        lbNumMesa.setText(num);
    }

    public void setaStatus(String st) {
        if (st.equalsIgnoreCase("Ocupada")) {
            lbStatusMesa.setText("OCUPADA");
            lbStatusMesa.setForeground(Color.red);
        } else if (st.equalsIgnoreCase("Reservada")) {
            lbStatusMesa.setText("RESERVADA");
            lbStatusMesa.setForeground(Color.blue);

        } else {
            lbStatusMesa.setText("DISPONÍVEL");
            lbStatusMesa.setForeground(Color.green.darker());
        }
    }

    public String getStatus() {
        return lbStatusMesa.getText();
    }

    public void atualizaValor(String valor) {
        lbTotalMesa.setText(valor);
    }

    public void atualizaHora() {
        if (action == null) {
            action = new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    if (horaReservada.equals(HORA.format(new Date()))) {
                        fimReserva();
                    }
                }
            };
        }
        timer = new Timer(1000, action);
        timer.setInitialDelay(0);
        timer.setRepeats(true);
        timer.start();
    }

    public void fimReserva() {
        setaStatus("DISPONÍVEL");
        horaReservada = null;
        if (timer != null) {
            timer.stop();
        }
        liberarMesa.setVisible(false);
        reservarMesa.setVisible(true);
    }
    
    public double getValorTotal(){
        return Double.valueOf(lbTotalMesa.getText().replaceAll(",","."));
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menu = new javax.swing.JPopupMenu();
        reservarMesa = new javax.swing.JMenuItem();
        statusMesa = new javax.swing.JMenuItem();
        liberarMesa = new javax.swing.JMenuItem();
        lbNumMesa = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        lbStatusMesa = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        lbTotalMesa = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();

        reservarMesa.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        reservarMesa.setText("Reservar Mesa");
        reservarMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reservarMesaActionPerformed(evt);
            }
        });
        menu.add(reservarMesa);

        statusMesa.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        statusMesa.setText("Status Mesa");
        statusMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusMesaActionPerformed(evt);
            }
        });
        menu.add(statusMesa);

        liberarMesa.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        liberarMesa.setText("Liberar Mesa");
        liberarMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                liberarMesaActionPerformed(evt);
            }
        });
        menu.add(liberarMesa);

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        setPreferredSize(new java.awt.Dimension(145, 100));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                formMouseExited(evt);
            }
        });

        lbNumMesa.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lbNumMesa.setText("000");

        jLabel60.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel60.setText("STATUS:");

        lbStatusMesa.setBackground(new java.awt.Color(0, 204, 0));
        lbStatusMesa.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lbStatusMesa.setForeground(new java.awt.Color(51, 153, 0));
        lbStatusMesa.setText("DISPONÍVEL");

        jLabel62.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel62.setText("TOTAL: R$");

        lbTotalMesa.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lbTotalMesa.setText("0,00");

        jLabel64.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel64.setText("MESA:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel62)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbTotalMesa))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel60)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbStatusMesa))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel64)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbNumMesa)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNumMesa)
                    .addComponent(jLabel64))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel60)
                    .addComponent(lbStatusMesa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel62)
                    .addComponent(lbTotalMesa))
                .addContainerGap(18, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        setBackground(Color.orange);
    }//GEN-LAST:event_formMouseEntered

    private void formMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseExited
        setBackground(Color.white);
    }//GEN-LAST:event_formMouseExited

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        if ((evt.getButton() == 1) && !lbStatusMesa.getText().equalsIgnoreCase("Reservada")) {
            if (mesa == null) {
                mesa = new TelaMesa(lbNumMesa.getText());
            }
            mesa.setModal(true);
            mesa.setObjMesa(this);
            mesa.setVisible(true);
        } else if (evt.getButton() == 3) {
            if (lbStatusMesa.getText().equalsIgnoreCase("reservada")
                    || lbStatusMesa.getText().equalsIgnoreCase("ocupada")) {
                reservarMesa.setVisible(false);
                liberarMesa.setVisible(true);
            }
            menu.show(this, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_formMouseClicked

    private void reservarMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reservarMesaActionPerformed
        try {
            if (fmtHora == null) {
                fmtHora = new MaskFormatter("##:##");
            }
        } catch (ParseException ex) {
            System.out.println(ex.getMessage());
        }
        JFormattedTextField dataFormatada = new JFormattedTextField(fmtHora);
        JLabel rotulo = new JLabel("<html>Digite a Hora<br>da Reserva:</html>");
        JPanel tela = new JPanel();
        tela.setLayout(new BoxLayout(tela, BoxLayout.X_AXIS));
        tela.add(rotulo);
        tela.add(dataFormatada);
        
        JOptionPane.showMessageDialog(null, tela, "PubManager.Soft", JOptionPane.PLAIN_MESSAGE);

        dataFormatada.setText(dataFormatada.getText().replace(" ", "9"));
        System.out.println(dataFormatada.getText());

        if (Integer.valueOf(dataFormatada.getText().substring(0, 2)) <= 23 && Integer.valueOf(dataFormatada.getText().substring(3, 5)) <= 59) {
            horaReservada = dataFormatada.getText();
            atualizaHora();
            setaStatus("Reservada");
        } else {
            JOptionPane.showMessageDialog(null, "Horario Inválido", "PubManager.Soft", JOptionPane.WARNING_MESSAGE);
        }


    }//GEN-LAST:event_reservarMesaActionPerformed

    private void liberarMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_liberarMesaActionPerformed
        if (Float.valueOf(lbTotalMesa.getText().replaceAll(",", ".")) <= 0) {
            if (JOptionPane.showConfirmDialog(null, "Deseja Liberar Mesa?", "PubManager.Soft",
                    JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                fimReserva();
            }
        }
    }//GEN-LAST:event_liberarMesaActionPerformed

    private void statusMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusMesaActionPerformed
        if (getStatus().equalsIgnoreCase("Disponível")){
            JOptionPane.showMessageDialog(null, "Mesa Disponível","PubManager.Soft",JOptionPane.INFORMATION_MESSAGE);
        }else if (getStatus().equalsIgnoreCase("Ocupada")){
            int aux = 0;
            if (mesa.getTabelaAux() != null){
                aux = mesa.getTabelaAux().getRowCount();
            }
            JOptionPane.showMessageDialog(null, "Mesa "+ lbNumMesa.getText()+"\nValor Gasto: "+lbTotalMesa.getText()+
                    "\nItens Vendidos: "+aux,
                    "PubManager.Soft",JOptionPane.INFORMATION_MESSAGE);
        }else if (getStatus().equalsIgnoreCase("Reservada")){
            JOptionPane.showMessageDialog(null, "Mesa Reservada\npara ás: "+ horaReservada+" !","PubManager.Soft",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_statusMesaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel lbNumMesa;
    private javax.swing.JLabel lbStatusMesa;
    private javax.swing.JLabel lbTotalMesa;
    private javax.swing.JMenuItem liberarMesa;
    private javax.swing.JPopupMenu menu;
    private javax.swing.JMenuItem reservarMesa;
    private javax.swing.JMenuItem statusMesa;
    // End of variables declaration//GEN-END:variables
}
